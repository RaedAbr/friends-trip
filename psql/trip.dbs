<?xml version="1.0" encoding="UTF-8" ?>
<project name="trip" id="Project_a5ae4b" template="Default" database="PostgreSQL" >
	<schema name="trip" catalogname="trip" schemaname="trip" >
		<table name="event" >
			<column name="id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="date" type="timestamp" length="29" decimal="6" jt="93" />
			<column name="creator" type="varchar" length="30" decimal="0" jt="12" />
			<index name="pk_event" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="ref_user_login" to_schema="trip" to_table="user" delete_action="cascade" update_action="cascade" >
				<fk_column name="creator" pk="login" />
			</fk>
		</table>
		<table name="expense" >
			<column name="id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="nature" type="text" decimal="0" jt="12" />
			<column name="cost" type="numeric" length="20" decimal="2" jt="2" >
				<defo>0</defo>
			</column>
			<column name="date" type="timestamp" length="29" decimal="6" jt="93" >
				<defo>now()</defo>
			</column>
			<column name="event_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="user_login" type="varchar" length="30" decimal="0" jt="12" />
			<index name="pk_expense" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<constraint name="expense_cost_check" >
				<string>cost &gt;= (0)::numeric</string>
			</constraint>
			<fk name="ref_event_id" to_schema="trip" to_table="event" delete_action="cascade" update_action="cascade" >
				<fk_column name="event_id" pk="id" />
			</fk>
			<fk name="ref_user_login" to_schema="trip" to_table="user" delete_action="cascade" update_action="cascade" >
				<fk_column name="user_login" pk="login" />
			</fk>
		</table>
		<table name="expense_concerned" >
			<column name="expense_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="concerned" type="varchar" length="30" decimal="0" jt="12" mandatory="y" />
			<index name="pk_expense_concerned" unique="PRIMARY_KEY" >
				<column name="expense_id" />
				<column name="concerned" />
			</index>
			<fk name="ref_expense_id" to_schema="trip" to_table="expense" delete_action="cascade" update_action="cascade" >
				<fk_column name="expense_id" pk="id" />
			</fk>
			<fk name="ref_user_login" to_schema="trip" to_table="user" delete_action="cascade" update_action="cascade" >
				<fk_column name="concerned" pk="login" />
			</fk>
		</table>
		<table name="user" >
			<column name="login" type="varchar" length="30" decimal="0" jt="12" mandatory="y" />
			<column name="password" type="varchar" length="30" decimal="0" jt="12" />
			<column name="email" type="varchar" length="50" decimal="0" jt="12" />
			<index name="pk_user" unique="PRIMARY_KEY" >
				<column name="login" />
			</index>
		</table>
		<table name="user_event" >
			<column name="event_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="user_login" type="varchar" length="30" decimal="0" jt="12" mandatory="y" />
			<column name="user_weight" type="integer" length="10" decimal="0" jt="4" >
				<defo>1</defo>
			</column>
			<index name="pk_user_event" unique="PRIMARY_KEY" >
				<column name="event_id" />
				<column name="user_login" />
			</index>
			<fk name="ref_event_id" to_schema="trip" to_table="event" delete_action="cascade" update_action="cascade" >
				<fk_column name="event_id" pk="id" />
			</fk>
			<fk name="ref_user_login" to_schema="trip" to_table="user" delete_action="cascade" update_action="cascade" >
				<fk_column name="user_login" pk="login" />
			</fk>
		</table>
		<view name="concerned_users_by_expenses" >
			<view_script><![CDATA[ SELECT e.event_id,
    ec.concerned,
    e.user_login AS expense_owner,
    e.cost,
    ec.expense_id
   FROM (trip.expense_concerned ec
     JOIN trip.expense e ON ((e.id = ec.expense_id)));]]></view_script>
			<column name="event_id" type="integer" />
			<column name="concerned" type="varchar" />
			<column name="expense_owner" type="varchar" />
			<column name="cost" type="numeric" />
			<column name="expense_id" type="integer" />
		</view>
		<view name="parts_of_expense" >
			<view_script><![CDATA[ SELECT r.expense_id,
    sum(r.user_weight) AS parts_nb
   FROM ( SELECT res.expense_id,
            res.concerned,
            u.event_id,
            u.user_weight
           FROM (( SELECT ec.expense_id,
                    ec.concerned,
                    e.event_id
                   FROM (trip.expense_concerned ec
                     JOIN trip.expense e ON ((e.id = ec.expense_id)))) res
             JOIN trip.user_event u ON ((res.event_id = u.event_id)))
          WHERE ((res.concerned)::text = (u.user_login)::text)) r
  GROUP BY r.expense_id, r.event_id;]]></view_script>
			<column name="expense_id" type="integer" />
			<column name="parts_nb" type="bigint" />
		</view>
		<sequence name="event_id_seq" start="1" />
		<sequence name="expense_id_seq" start="1" />
		<procedure name="before_insert_expense_concerned" id="Procedure_20d2fc5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION trip.before_insert_expense_concerned()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
	declare
		tuple record;
		event integer;
	begin
		select event_id into event from trip.expense
			where new.expense_id = id;
		select * into tuple from trip.user_event
			where event = event_id and new.concerned like user_login;
		if not found then
			raise exception '"%" can not be concerned by the expense "%" !', new.concerned, new.expense_id;
		end if;
		return new;
	end;
$function$
]]></string>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="drop_all_tables" id="Procedure_28adefa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION trip.drop_all_tables()
 RETURNS void
 LANGUAGE sql
AS $function$
	drop table if exists trip."event" cascade;
	drop table if exists trip."user" cascade;
	drop table if exists trip."user_event" cascade;
	drop table if exists trip."expense" cascade;
	drop table if exists trip."expense_concerned" cascade;
	drop function trip.before_insert_expense_concerned() cascade;
	drop function trip.get_user_situation ( integer, character varying, character varying) cascade ;
$function$
]]></string>
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="get_user_situation" id="Procedure_b4a2d9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION trip.get_user_situation(integer, character varying, character varying)
 RETURNS numeric
 LANGUAGE plpgsql
AS $function$
	declare
		cur cursor for select * from trip.concerned_users_by_expenses c
			where c.event_id = $1 and c.expense_owner like $2 and c.concerned like $3
			and c.concerned not like $2;
		el record;
		nb integer;
		w integer;
		amount decimal(20, 2);
	begin
		amount := 0;
		for el in cur loop
			select parts_nb into nb from trip.parts_of_expense
				where expense_id = el.expense_id;
			select u.user_weight into w from trip.user_event u
				where u.user_login like el.concerned and el.event_id = u.event_id;
			amount := amount + (el.cost) / nb * w;
		end loop;
		RETURN amount;
	end;
$function$
]]></string>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="12" type="varchar" />
			<input_param name="$3" jt="12" type="varchar" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<trigger name="before_insert_expense_concerned_trigger" table="expense_concerned" id="Trigger_2ec99b9" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER before_insert_expense_concerned_trigger BEFORE INSERT ON trip.expense_concerned FOR EACH ROW EXECUTE PROCEDURE trip.before_insert_expense_concerned()]]></string>
		</trigger>
	</schema>
	<connector name="trip" database="PostgreSQL" driver_class="org.postgresql.Driver" driver_jar="postgresql-42.1.4.jar" driver_desc="Heroku" host="localhost" port="5432" instance="trip" user="raed" passwd="cmFlZC4xOTkz" />
	<layout name="Default Layout" id="Layout_14be72d" show_column_type="y" show_relation="columns" >
		<comment><![CDATA[trip]]></comment>
		<entity schema="trip" name="expense" color="bfd4f5" x="285" y="150" />
		<entity schema="trip" name="parts_of_expense" color="ff0000" x="375" y="450" />
		<entity schema="trip" name="concerned_users_by_expenses" color="ff0000" x="150" y="450" />
		<entity schema="trip" name="user" color="bfd4f5" x="45" y="165" />
		<entity schema="trip" name="user_event" color="bfd4f5" x="285" y="45" />
		<entity schema="trip" name="expense_concerned" color="bfd4f5" x="285" y="360" />
		<entity schema="trip" name="event" color="bfd4f5" x="540" y="165" />
	</layout>
	<layout name="Sample Layout with Tools" id="Layout_3ae6ebf" show_column_type="y" show_relation="columns" >
		<entity schema="trip" name="event" color="bfd4f5" x="270" y="225" />
		<entity schema="trip" name="expense" color="bfd4f5" x="480" y="225" />
		<entity schema="trip" name="expense_concerned" color="bfd4f5" x="705" y="225" />
		<entity schema="trip" name="user" color="bfd4f5" x="45" y="225" />
		<entity schema="trip" name="user_event" color="bfd4f5" x="45" y="375" />
		<entity schema="trip" name="concerned_users_by_expenses" color="c8f5bf" x="960" y="225" />
		<entity schema="trip" name="parts_of_expense" color="c8f5bf" x="1215" y="405" />
		<callout x="45" y="75" pointer="NO" >
			<comment><![CDATA[Double-click any table, column or foreign key to edit, right-click to start one of the tools below.
Use the Relational Data Browse for simultaneously exploring data from multiple tables.
All tools will be saved to project file and can be reopen.]]></comment>
		</callout>
		<group name="user" color="ecf0f7" >
			<entity schema="trip" name="user" />
			<entity schema="trip" name="event" />
			<entity schema="trip" name="expense" />
			<entity schema="trip" name="user_event" />
			<entity schema="trip" name="expense_concerned" />
		</group>
		<group name="concerned_users_by_expenses" color="eef7ec" >
			<entity schema="trip" name="concerned_users_by_expenses" />
			<entity schema="trip" name="parts_of_expense" />
		</group>
		<script name="Sample SQL Editor" id="Editor_95b5fd" language="SQL" >
			<string><![CDATA[SELECT * 
FROM
	trip."user" r;]]></string>
		</script>
		<browser id="Browse_2b890e0" name="Sample Relational Data Browse" confirm_updates="y" >
			<browse_table schema="trip" entity="user" x="20" y="20" width="400" height="300" >
				<browse_table schema="trip" entity="event" fk="ref_user_login" x="440" y="20" width="400" height="300" >
					<browse_table schema="trip" entity="expense" fk="ref_event_id" x="860" y="20" width="400" height="300" />
				</browse_table>
			</browse_table>
		</browser>
		<query id="Query_30068fe" name="Sample Query Builder" >
			<query_table schema="trip" name="user" alias="u" x="45" y="45" >
				<column name="login" />
				<column name="password" />
				<column name="email" />
				<query_table schema="trip" name="event" alias="e" x="195" y="45" fk="ref_user_login" type="Inner Join" >
					<column name="id" />
					<column name="name" />
					<column name="date" />
					<column name="creator" />
					<query_table schema="trip" name="expense" alias="e1" x="345" y="45" fk="ref_event_id" type="Inner Join" >
						<column name="id" />
						<column name="nature" />
						<column name="cost" />
						<column name="date" />
						<column name="event_id" />
						<column name="user_login" />
					</query_table>
				</query_table>
			</query_table>
		</query>
	</layout>
</project>